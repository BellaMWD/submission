# -*- coding: utf-8 -*-
"""dashboard.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13YaPfKH7ADst4mMLfaZ8ACGocLu4ECAX

# Proyek Analisis Data: Bike-sharing-dataset
- **Nama:** Bella Melati Wiranur Dwifani
- **Email:** bellamelati21@if.unjani.ac.id
- **ID Dicoding:** JLX12JYJ6Z72

## Menentukan Pertanyaan Bisnis

- Bagaimana pola dari penggunaan bike-sharing bisa dipengaruhi oleh kondisi cuaca? Akankah ada perbedaan secara signifikan antara pengguna terdaftar dan pengguna yang belum terdaftar dalam pola penggunaan pada hari kerja dan diluar hari kerja?
- Bagaimana korelasi antara suhu dan jumlah perjalanan pada hari kerja dan diluar hari kerja? Apakah nantinya akan terdapat sebuah gaya/mode tertentu yang dapat diidentifikasi berdasarkan variabel cuaca dan hari kerja?

## Import Semua Packages/Library yang Digunakan
"""

#pip install streamlit

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sn
import streamlit as st

"""## Data Wrangling

### Gathering Data

Membaca dan menampilkan day_csv
"""

day_df=pd.read_csv('day.csv')
day_df.head()

"""Membaca dan Menampilkan hour_csv

"""

hour_df=pd.read_csv('hour.csv')
hour_df.head()

"""### Assessing Data

Menampilkan lima baris pertama, informasi dan data statistik dari day_csv
"""

st.subheader('Day Dataset')
st.write(day_df.head())
st.write(day_df.info())
st.write(day_df.describe())

"""Menampilkan lima baris pertama, informasi dan data statistik dari hour_csv"""

st.subheader('Hour Dataset')
st.write(hour_df.head())
st.write(hour_df.info())
st.write(hour_df.describe())

"""### Cleaning Data

Mengecek apakah ada duplikasi dalam data
"""

st.header('Cleaning Data')
day_df.drop_duplicates(inplace=True) #Duplikat data
st.write("Jumlah duplikasi hari : ", day_df.duplicated().sum())

"""Mengecek apakah ada data yang hilang pada day_df dan hour_df"""

st.write("Missing values in day_df:") #missing value
st.write(day_df.isna().sum())
st.write("Missing values in hour_df:")
st.write(hour_df.isna().sum())

"""## Exploratory Data Analysis (EDA)

Distribusi dan statistik Workingday dari day_df
"""

plt.figure(figsize=(8, 5))
day_df['workingday'].value_counts().plot(kind='bar', color='purple')
plt.title('Distribusi pada Hari Kerja')
plt.xlabel('Working Day')
plt.ylabel('Count')
plt.xticks(rotation=0)
plt.show()

"""Distribusi dan statistik Weekday dari day_df"""

plt.figure(figsize=(8, 5))
day_df['weekday'].value_counts().plot(kind='bar', color='green')
plt.title('Distribusi pada Hari Libur')
plt.xlabel('Weekday')
plt.ylabel('Count')
plt.xticks(rotation=0)
plt.show()

"""Distribusi dan statistik Weathersit dari day_df"""

plt.figure(figsize=(8, 5))
day_df['weathersit'].value_counts().plot(kind='bar', color='red')
plt.title('Distribusi pada Cuaca')
plt.xlabel('Weathersit')
plt.ylabel('Count')
plt.xticks(rotation=0)
plt.show()

"""Distribusi dan statistik Weathersit dari hour_df

### Explore....

Menampilkan seluruh data
"""

day_df.describe(include="all")

"""Menggabungkan frame dari day_df berdasarkan workingday, weekend, dan weathersit lalu menghitung jumlah dari casual, registered, dan count."""

day_df.groupby(by=["workingday", "weekday", "weathersit"]).agg({
    "casual": "sum",
    "registered": "sum",
    "cnt": "sum"
})

"""Menggabungkan frame dari day_df berdasarkan season dan data dan menghitung jumlah dari casual, registered, dan count."""

day_df.groupby(by=["season", "dteday"]).agg({
    "casual": "sum",
    "registered": "sum",
    "cnt": "sum"
})

"""## Visualization & Explanatory Analysis

### Pertanyaan 1: Scatter Plot Suhu & dan jumlah perjalanan.
Membuat scatter plot untuk membandingkan suhu dengan jumlah perjalanan pada hari kerja. Saya menambahkan beberapa function agar scatter plot bisa tampil di notebook dan streamlit.
"""

def scatter_plot(data):
    fig, ax = plt.subplots(figsize=(10, 5))
    scatter = ax.scatter(x=data['temp'], y=data['cnt'], c=data['workingday'], cmap='viridis')
    ax.set_title('Suhu (temp) dan Jumlah Perjalanan (count)')
    ax.set_xlabel('Temp')
    ax.set_ylabel('Count')
    plt.colorbar(scatter, ax=ax, label='Working Day')
    st.pyplot(fig)
scatter_plot(day_df)
plt.show()

"""### Pertanyaan 2: Grafik garis pola pengguna harian.
Membuat grafik garis dari pola pengguna harian pada bike-sharing-datasheet di hari kerja dan di hari luar kerja.  Saya menambahkan beberapa function agar grafik bisa tampil di notebook dan streamlit.
"""

def line_plot(data):
    fig, ax = plt.subplots(figsize=(10, 5))
    ax.plot(data['dteday'], data['cnt'], linestyle='-', color='purple', label='Daily Counts')
    ax.set_title('Pola Pengguna Harian')
    ax.set_xlabel('Date')
    ax.set_ylabel('Count')
    ax.tick_params(axis='x', rotation=45)
    ax.legend()
    st.pyplot(fig)
line_plot(day_df)
plt.show()

"""## Conclusion

- Pertanyaan 1 : Menunjukkan bahwa pada hari kerja pengguna terdaftar cenderung menyewa sepeda lebih banyak utama saat suhu tinggi. Di hari libur, pola ini bisa saja berbeda dan terlihat adanya perbedaan secara signifikan diantara pengguna terdaftar dan tidak terdaftar.
- Pertanyaan 2 : Menunnjukkan bahwa pada hari kerja, terdapat korelasi positif antara suhu dan jumlah perjalanan, terutama untuk pengguna terdaftar saja. Namun, pada hari libur mungkin saja pola ini bisa berbeda dan memerlukan lebih banyak lagi eksplorasi untuk kedepannya.

Untuk menampilkan dashboard sederhana pada streamlit
"""

# Sidebar for date and time selection
st.sidebar.header('Pilih Hari dan Jam')
selected_day = st.sidebar.selectbox('Pilih Hari', day_df['dteday'].unique())
selected_hour = st.sidebar.selectbox('Pilih Jam', hour_df['hr'].unique())
# Filter data based on selected day and hour
day_filtered_data = day_df[day_df['dteday'] == selected_day]
hour_filtered_data = hour_df[(hour_df['dteday'] == selected_day) & (hour_df['hr'] == selected_hour)]